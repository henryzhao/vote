<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="im.vec.user.dao.RolePermitDao">
  <resultMap id="BaseResultMap" type="im.vec.user.entity.RolePermit">
    <id column="roleId" jdbcType="INTEGER" property="roleId" />
    <id column="permitId" jdbcType="INTEGER" property="permitId" />
    <result column="operation" jdbcType="VARCHAR" property="operation" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="createBy" jdbcType="VARCHAR" property="createBy" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="updateBy" jdbcType="VARCHAR" property="updateBy" />
    <result column="isDelete" jdbcType="TINYINT" property="isDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    roleId, permitId, `operation`, createTime, createBy, updateTime, updateBy, isDelete
  </sql>
  <select id="selectByExample" parameterType="im.vec.user.entity.RolePermitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role_permit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="im.vec.user.entity.RolePermitKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role_permit
    where roleId = #{roleId,jdbcType=INTEGER}
      and permitId = #{permitId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="im.vec.user.entity.RolePermitKey">
    delete from sys_role_permit
    where roleId = #{roleId,jdbcType=INTEGER}
      and permitId = #{permitId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="im.vec.user.entity.RolePermitExample">
    delete from sys_role_permit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="im.vec.user.entity.RolePermit">
    replace into sys_role_permit (roleId, permitId, `operation`,
      createTime, createBy, updateTime, 
      updateBy, isDelete)
    values (#{roleId,jdbcType=INTEGER}, #{permitId,jdbcType=INTEGER}, #{operation,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{isDelete,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="im.vec.user.entity.RolePermit">
    replace into sys_role_permit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        roleId,
      </if>
      <if test="permitId != null">
        permitId,
      </if>
      <if test="operation != null">
        `operation`,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="createBy != null">
        createBy,
      </if>
      <if test="updateTime != null">
        updateTime,
      </if>
      <if test="updateBy != null">
        updateBy,
      </if>
      <if test="isDelete != null">
        isDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="permitId != null">
        #{permitId,jdbcType=INTEGER},
      </if>
      <if test="operation != null">
        #{operation,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="im.vec.user.entity.RolePermitExample" resultType="java.lang.Long">
    select count(*) from sys_role_permit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role_permit
    <set>
      <if test="record.roleId != null">
        roleId = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.permitId != null">
        permitId = #{record.permitId,jdbcType=INTEGER},
      </if>
      <if test="record.operation != null">
        `operation` = #{record.operation,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        createBy = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        updateBy = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        isDelete = #{record.isDelete,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role_permit
    set roleId = #{record.roleId,jdbcType=INTEGER},
      permitId = #{record.permitId,jdbcType=INTEGER},
      `operation` = #{record.operation,jdbcType=VARCHAR},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      createBy = #{record.createBy,jdbcType=VARCHAR},
      updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
      updateBy = #{record.updateBy,jdbcType=VARCHAR},
      isDelete = #{record.isDelete,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="im.vec.user.entity.RolePermit">
    update sys_role_permit
    <set>
      <if test="operation != null">
        `operation` = #{operation,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        createBy = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        updateBy = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        isDelete = #{isDelete,jdbcType=TINYINT},
      </if>
    </set>
    where roleId = #{roleId,jdbcType=INTEGER}
      and permitId = #{permitId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="im.vec.user.entity.RolePermit">
    update sys_role_permit
    set `operation` = #{operation,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      createBy = #{createBy,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=TINYINT}
    where roleId = #{roleId,jdbcType=INTEGER}
      and permitId = #{permitId,jdbcType=INTEGER}
  </update>
</mapper>