<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="im.vec.user.dao.UserRoleDao">
    <resultMap id="BaseResultMap" type="im.vec.user.entity.UserRole">
        <id column="userId" jdbcType="INTEGER" property="userId"/>
        <id column="roleId" jdbcType="INTEGER" property="roleId"/>
        <result column="createTime" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="createBy" jdbcType="VARCHAR" property="createBy"/>
        <result column="updateTime" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="updateBy" jdbcType="VARCHAR" property="updateBy"/>
        <result column="isDelete" jdbcType="TINYINT" property="isDelete"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    userId, roleId, createTime, createBy, updateTime, updateBy, isDelete
  </sql>
    <select id="selectByExample" parameterType="im.vec.user.entity.UserRoleExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from sys_user_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="im.vec.user.entity.UserRoleKey" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user_role
        where userId = #{userId,jdbcType=INTEGER}
        and roleId = #{roleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="im.vec.user.entity.UserRoleKey">
    delete from sys_user_role
    where userId = #{userId,jdbcType=INTEGER}
      and roleId = #{roleId,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="im.vec.user.entity.UserRoleExample">
        delete from sys_user_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="im.vec.user.entity.UserRole">
    replace into sys_user_role (userId, roleId, createTime,
      createBy, updateTime, updateBy, 
      isDelete)
    values (#{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{isDelete,jdbcType=TINYINT})
  </insert>
    <insert id="insertSelective" parameterType="im.vec.user.entity.UserRole">
        replace into sys_user_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                userId,
            </if>
            <if test="roleId != null">
                roleId,
            </if>
            <if test="createTime != null">
                createTime,
            </if>
            <if test="createBy != null">
                createBy,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
            <if test="updateBy != null">
                updateBy,
            </if>
            <if test="isDelete != null">
                isDelete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="im.vec.user.entity.UserRoleExample"
            resultType="java.lang.Long">
        select count(*) from sys_user_role
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update sys_user_role
        <set>
            <if test="record.userId != null">
                userId = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.roleId != null">
                roleId = #{record.roleId,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                createTime = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createBy != null">
                createBy = #{record.createBy,jdbcType=VARCHAR},
            </if>
            <if test="record.updateTime != null">
                updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateBy != null">
                updateBy = #{record.updateBy,jdbcType=VARCHAR},
            </if>
            <if test="record.isDelete != null">
                isDelete = #{record.isDelete,jdbcType=TINYINT},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update sys_user_role
        set userId = #{record.userId,jdbcType=INTEGER},
        roleId = #{record.roleId,jdbcType=INTEGER},
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
        createBy = #{record.createBy,jdbcType=VARCHAR},
        updateTime = #{record.updateTime,jdbcType=TIMESTAMP},
        updateBy = #{record.updateBy,jdbcType=VARCHAR},
        isDelete = #{record.isDelete,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="im.vec.user.entity.UserRole">
        update sys_user_role
        <set>
            <if test="createTime != null">
                createTime = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                createBy = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                updateBy = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                isDelete = #{isDelete,jdbcType=TINYINT},
            </if>
        </set>
        where userId = #{userId,jdbcType=INTEGER}
        and roleId = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="im.vec.user.entity.UserRole">
    update sys_user_role
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      createBy = #{createBy,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=TIMESTAMP},
      updateBy = #{updateBy,jdbcType=VARCHAR},
      isDelete = #{isDelete,jdbcType=TINYINT}
    where userId = #{userId,jdbcType=INTEGER}
      and roleId = #{roleId,jdbcType=INTEGER}
  </update>

    <update id="recoverByUserId" parameterType="int">
        update sys_user_role
        set isDelete = 0
        where updateTime in
						(select temp.updateTime from
							(select max(updateTime) as updateTime from sys_user_role where userId = #{userId,jdbcType=INTEGER}) temp
						)and userId = #{userId,jdbcType=INTEGER}
    </update>

</mapper>